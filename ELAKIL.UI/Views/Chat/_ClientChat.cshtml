@inject IMessageService messageService
@inject IUserProfileService userProfileService
@inject UserManager<IdentityUser>  userManager
@{ 
    var userAdmin= (await userManager.GetUsersInRoleAsync(ApplicationRoles.Admin.ToString())).First();
    var userId = await userProfileService.GetUserProfileIdAsync(User.Identity.Name);
    var messages = await messageService.GetMessagesAsync(userId);
 }
<div class="mesgs">
    <div class="msg_history" id="msg_history">
        @foreach (var message in messages)
        {
            if (message.ToUserProfileId == null)
            {
                <div class="outgoing_msg">
                    <div class="sent_msg">
                        <p>
                            @message.Content
                        </p>
                        <span class="time_date">@message.SendDate.ToString("hh : mm - MMMM dd")</span>
                    </div>
                </div> 
                
             }
            else
            {
                <div class="incoming_msg">
                    <div class="incoming_msg_img"> <img src="https://ptetutorials.com/images/user-profile.png"> </div>
                    <div class="received_msg">
                        <div class="received_withd_msg">
                            <p>
                                @message.Content
                            </p>
                            <span class="time_date">@message.SendDate.ToString("hh : mm - MMMM dd")</span>
                        </div>
                    </div>
                </div>
            }
         }
    </div>
    <div class="type_msg">
        <div class="input_msg_write">
            <input value="@userAdmin.UserName" id="userInput" type="hidden" />
            <input type="text" id="messageInput" class="write_msg" placeholder="Type a message" />
            <button class="msg_send_btn" type="button" id="sendButton"><i class="fa fa-paper-plane-o" aria-hidden="true"></i></button>
        </div>
    </div>
</div>
